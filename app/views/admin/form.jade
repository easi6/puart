- if (model.tableName == "location_infos")
  script(src='http://api.map.baidu.com/api?v=2.0&ak=TojIyUDPryXElDakFiSqlBS8' type='text/javascript')
  style(type='text/css').
    #allmap {
      height: 500px;
    }

- var enctype="application/x-www-form-urlencoded"
- if (model.tableName == "records")
    - enctype = "multipart/form-data"
.row
  .col-md-5
    form(role="form" method="POST" action="/admin/#{model.tableName}/#{record.isNewRecord ? '' : (record.id || record.getDataValue(model.primaryKeyAttributes[0]))+'/update' }" enctype="#{enctype}")
      - var timestamp_cols = []
      - each val, key in model._timestampAttributes
        - timestamp_cols.push(val)

      - each val, key in model.rawAttributes
        - if (!val["_autoGenerated"] && timestamp_cols.indexOf(key) == -1)
          - if (key == "password_hashed")
            - key = "password"
          .form-group
            label(for="#{model.tableName}_#{key}") #{key}
            - if (key == "file") //special case
              input(type="file" id="#{model.tableName}_#{key}" name="#{key}" class="form-control")
            - else if (key == "category" && model.tableName == "location_infos")
              - var dat = record.getDataValue(key)
              - if (dat == null || dat == undefined)
                - dat = ''
              select(id="#{model.tableName}_#{key}" name="#{key}")
                - var options = ['famous', 'hotel', 'airport'];
                - each option in options
                  - var selected = null; if(option == dat) selected = 'selected';
                  option(value=option, selected=selected)= option
            - else
              - var dat = record.getDataValue(key)
              - if (dat == null || dat == undefined)
                - dat = ''
              input(type="#{key == 'password' ? 'password' : 'text'}" id="#{model.tableName}_#{key}" name="#{key}" class="form-control" value="#{dat}")
      .form-group
        .text-right
          button.btn.btn-default(type="submit") Submit
  .col-md-5
    - if (model.tableName == "location_infos")
      .row
        form#search-form.form-inline
          input#search-map.form-control(type="text")
          button#search-map-btn.btn.btn-default(type="submit") Search
        br
      .row
        div#allmap
  .col-md-2
    div#search-results

- if (model.tableName == "location_infos")
  script(type='text/javascript').
    var map = new BMap.Map('allmap');
    var geoc = new BMap.Geocoder();
    map.centerAndZoom(new BMap.Point(114.057140, 22.549453), 11);

    var local = new BMap.LocalSearch(map, {
      renderOptions: {
        map: map,
        panel: 'search-results'
      }
    });

    var setGeoValue = function(data) {
      data.city = data.city.replace('香港特别行政区', '香港').replace('深圳市', '深圳');
      $('#location_infos_latitude').val(data.point.lat);
      $('#location_infos_longitude').val(data.point.lng);
      $('#location_infos_name_zh_hans').val(data.title);
      $('#location_infos_address_zh_hans').val(data.address);
      $('#location_infos_phone').val(data.phoneNumber);
      $('#location_infos_city').val(data.city);
    };

    var markerMoved = function(point) {
      geoc.getLocation(point, function(res) {
        var data = $.extend({}, res, res.addressComponents);
        setGeoValue(data)
      });
    };


    local.setMarkersSetCallback(function(locations) {
      $.each(locations, function(index, location) {
        var marker = location.marker;
        marker.enableDragging();
        marker.addEventListener('dragend', function(e) {
          markerMoved(e.point);
        });
      });
    });

    local.setInfoHtmlSetCallback(function(loc) {
      setGeoValue(loc);
    });

    $('#search-form').submit(function() {
      var searchText = $('#search-map').val();
      local.search(searchText);
      return false;
    });

- if (!record.isNewRecord)
  script(type='text/javascript').
    var alreadyPoint = new BMap.Point(
      $('#location_infos_longitude').val()*1,
      $('#location_infos_latitude').val()*1
    );
    map.centerAndZoom(alreadyPoint, 11);
    alreadyMarker = new BMap.Marker(alreadyPoint);
    map.addOverlay(alreadyMarker);
    alreadyMarker.enableDragging();
    alreadyMarker.addEventListener('dragend', function(e) {
      markerMoved(e.point);
    });
    
